{"version":3,"sources":["jquery.js"],"names":["window","$","jQuery","selectorOrArrayOrTemplate","elements","createElement","document","querySelectorAll","Array","string","container","innerHTML","trim","content","firstChild","jquery","get","index","appendTo","node","Element","each","el","appendChild","append","children","HTMLCollection","i","length","addClass","className","classList","add","fn","call","parent","array","indexOf","parentNode","push","print","console","log","find","selector","elements2","from","concat","oldApi","end"],"mappings":"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","file":"jquery.7a6e0748.js","sourceRoot":"..\\src","sourcesContent":["window.$ = window.jQuery = function (selectorOrArrayOrTemplate) {\r\n\r\n    let elements\r\n    if (typeof selectorOrArrayOrTemplate === 'string') {\r\n        if (selectorOrArrayOrTemplate[0] === '<') {\r\n            // 创建div\r\n            elements = [createElement(selectorOrArrayOrTemplate)]\r\n        } else {\r\n            // 查找div\r\n            elements = document.querySelectorAll(selectorOrArrayOrTemplate)\r\n        }\r\n        // 如果是数组不是字符串，那么一定是find返回的数组\r\n    } else if (selectorOrArrayOrTemplate instanceof Array) {\r\n        elements = selectorOrArrayOrTemplate\r\n    }\r\n\r\n\r\n\r\n    function createElement(string) {\r\n        const container = document.createElement(\"template\");\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    }\r\n\r\n\r\n\r\n    // api 可以操作elements【返回一个可以操作elements的对象】\r\n    return {\r\n\r\n        jquery: true, // 这个属性表示正在处理的某个（或某些）元素节点是经过jquery处理的，那么这个元素节点是一个数组，在处理的时候要get(0)取得第0个\r\n\r\n        elements: elements,\r\n\r\n        get(index) {\r\n            return elements[index]\r\n        },\r\n\r\n        appendTo(node) { // 将api对象插入到某个节点（注意是某个）\r\n            if (node instanceof Element) { // Element是一个基类，所有document对象下的属性都继承Element（也就是通过原生dom => document.xxxxx 得到的DOM对象都属于这类）\r\n                this.each(el => node.appendChild(el)) // 遍历elements，对每个el进行node.appendChild操作\r\n            } else if (node.jquery === true) {\r\n                this.each(el => node.get(0).appendChild(el)) // 遍历elements，对每个el进行node.get(0).appendChild(el)操作\r\n            }\r\n        },\r\n\r\n        append(children) {\r\n            // 为api对象添加子节点，子节点可能是单个element元素，可能是element组成的集合，也可能是经过jQuery处理得到的数组。\r\n            // 如果是经过jQuery处理得到的数组，可以直接调用each遍历数组进行添加。\r\n            if (children instanceof Element) {\r\n                this.get(0).appendChild(children)\r\n            } else if (children instanceof HTMLCollection) { // HTMlCollection是表示一种成员为Element的通用集合。\r\n                for (let i = 0; i < children.length; i++) {\r\n                    this.get(0).appendChild(children[i])\r\n                }\r\n            } else if (children.jquery === true) {\r\n                children.each(node => this.get(0).appendChild(node))\r\n            }\r\n        },\r\n\r\n\r\n        // 闭包：函数访问外部的变量\r\n        addClass(className) {\r\n            for (let i = 0; i < elements.length; i++) {\r\n                elements[i].classList.add(className)\r\n            }\r\n            return this\r\n        },\r\n\r\n\r\n\r\n        each(fn) {\r\n            for (let i = 0; i < elements.length; i++) {\r\n                fn.call(null, elements[i], i)\r\n            }\r\n            return this\r\n        },\r\n\r\n\r\n        parent() {\r\n            const array = []\r\n            this.each((node) => {\r\n                if (array.indexOf(node.parentNode) === -1) { //当parentNode没获取到时执行\r\n                    array.push(node.parentNode)\r\n                }\r\n\r\n            })\r\n            return jQuery(array)\r\n        },\r\n\r\n\r\n        children() {\r\n            const array = []\r\n            this.each((node) => {\r\n                array.push(...node.children) // 展开二元数组中的每一项\r\n            })\r\n            return jQuery(array)\r\n        },\r\n\r\n\r\n\r\n\r\n\r\n        print() {\r\n            console.log(elements) // 打印元素们 ； \r\n            // 不能 console.log(selectorOrArray)，\r\n            // 因为 selectorOrArray 可能是选择器\r\n        },\r\n\r\n\r\n\r\n\r\n\r\n        find(selector) {\r\n            let array = []\r\n            for (let i = 0; i < elements.length; i++) {\r\n                const elements2 = Array.from(elements[i].querySelectorAll(selector))\r\n                array = array.concat(elements2)\r\n            }\r\n            array.oldApi = this  // this 就是 api\r\n            return jQuery(array)\r\n        },\r\n\r\n\r\n\r\n        oldApi: selectorOrArrayOrTemplate.oldApi,\r\n        // ? elements.oldApi 只有执行了 find 之后数组里面才有oldApi\r\n        end() {\r\n            return this.oldApi  //this 就是当时的 api // api2\r\n        },\r\n    }\r\n}\r\n\r\n// jQuery.prototype = {\r\n//     constructor: jQuery;\r\n// }"]}